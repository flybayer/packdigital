- args:
    sql: "CREATE TABLE \"public\".\"productOptionValues\"(\"id\" bigserial NOT NULL,
      \"createdAt\" timestamptz NOT NULL DEFAULT now(), \"updatedAt\" timestamptz
      NOT NULL DEFAULT now(), \"title\" text NOT NULL, \"position\" integer NOT NULL,
      \"productOptionId\" bigint, \"productVariantId\" bigint, PRIMARY KEY (\"id\")
      , FOREIGN KEY (\"productOptionId\") REFERENCES \"public\".\"productOptions\"(\"id\")
      ON UPDATE restrict ON DELETE restrict, FOREIGN KEY (\"productVariantId\") REFERENCES
      \"public\".\"productVariants\"(\"id\") ON UPDATE restrict ON DELETE restrict,
      UNIQUE (\"position\", \"productOptionId\"));\nCREATE OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updatedAt\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updatedAt\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_productOptionValues_updatedAt\"\nBEFORE
      UPDATE ON \"public\".\"productOptionValues\"\nFOR EACH ROW\nEXECUTE PROCEDURE
      \"public\".\"set_current_timestamp_updatedAt\"();\nCOMMENT ON TRIGGER \"set_public_productOptionValues_updatedAt\"
      ON \"public\".\"productOptionValues\" \nIS 'trigger to set value of column \"updatedAt\"
      to current timestamp on row update';\n"
  type: run_sql
- args:
    name: productOptionValues
    schema: public
  type: add_existing_table_or_view
